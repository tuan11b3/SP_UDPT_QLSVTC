USE [QLSVTC]
GO
/****** Object:  StoredProcedure [dbo].[SP_CHUYENLOP_SV]    Script Date: 12/15/2024 10:45:55 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[SP_CHUYENLOP_SV]
	@MASV NCHAR(10),
	@MALOP NCHAR(10),
	@MACN NCHAR(10)
AS
DECLARE @MaKhoaLop NCHAR(10)
DECLARE @MaKhoaCN NCHAR(10)
SET XACT_ABORT ON;
BEGIN
	IF EXISTS(SELECT 1 FROM dbo.SINHVIEN WHERE MASV=@MASV)
	BEGIN
		IF EXISTS(SELECT 1 FROM dbo.DANGKY WHERE MASV=@MASV
			AND (DIEM_CC IS NOT NULL OR DIEM_GK IS NOT NULL OR DIEM_CK IS NOT NULL))
		BEGIN
			RAISERROR ('Lỗi! sinh viên [%s] đã có điểm thành phần', 16, 1, @MASV);
			RETURN;
		END
		BEGIN TRY
			BEGIN DISTRIBUTED TRANSACTION;
			IF EXISTS(SELECT 1 FROM dbo.LOP WHERE MALOP=@MALOP)
			BEGIN
				-- SELECT TOP 1 @MACN=MACN FROM dbo.SINHVIEN WHERE MALOP=@MALOP
				UPDATE dbo.SINHVIEN SET MALOP=@MALOP, MACN=@MACN WHERE MASV=@MASV;
			END
			ELSE
			BEGIN
				IF NOT EXISTS(SELECT 1 FROM LINK0.QLSVTC.dbo.LOP WHERE MALOP=@MALOP)
				BEGIN
					RAISERROR(N'Lỗi không tìm thấy lớp trong hệ thông!',16,1)
					RETURN
				END
				SELECT @MaKhoaLop = MAKHOA FROM LINK0.QLSVTC.dbo.LOP WHERE MALOP = @MALOP;
				SELECT @MaKhoaCN = MAKHOA FROM LINK0.QLSVTC.dbo.CHUYENNGANH WHERE MACN = @MACN;
				IF NOT (RTRIM(@MaKhoaLop) = RTRIM(@MaKhoaCN))
				BEGIN
					RAISERROR(N'Lỗi! Lớp và chuyên ngành phải thuộc cùng một khoa', 16, 1, @MaKhoaLop, @MaKhoaCN);
					RETURN
				END
				-- SELECT TOP 1 @MACN=MACN FROM LINK0.QLSVTC.dbo.SINHVIEN WHERE MALOP=@MALOP
				UPDATE LINK0.QLSVTC.dbo.SINHVIEN SET MALOP=@MALOP, MACN=@MACN WHERE MASV=@MASV;
			END
			COMMIT TRANSACTION;
			PRINT N'Sinh viên chuyển lớp thành công';
		END TRY
		BEGIN CATCH
			ROLLBACK TRANSACTION;
			PRINT N'Chuyển lớp cho sinh viên được hủy do lỗi.';
			SELECT
				ERROR_MESSAGE() AS ErrorMessage,
				ERROR_NUMBER() AS ErrorNumber,
				ERROR_LINE() AS ErrorLine;
		END CATCH
	END
	ELSE
		RAISERROR ('Lỗi! sinh viên [%s] không tồn tại', 16, 1, @MASV);
END

